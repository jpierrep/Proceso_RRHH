/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package remuneraciones;

import com.sun.org.apache.bcel.internal.generic.AALOAD;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jpierre
 */
public class MappingTabla extends javax.swing.JFrame {

    DefaultTableModel tableModel;
    // FileMannager fileMannager=new FileMannager();
    ProcessMannager processMannager = new ProcessMannager();
    String[] cabeceraArchivo;
    MappingVars mappingVars;
    String mesForm;
    int añoForm;
    String fechaForm;
    int empresaForm;
    String procesoForm;
    private JTextField filename = new JTextField(), dir = new JTextField();
    String filepath;
    Transacciones transacciones = new Transacciones();
    Functions functions = new Functions();

    /**
     * Creates new form MappingTabla
     */
    public MappingTabla() {
        initComponents();
        // jButton1.setVisible(false);
        // jComboBox4.setVisible(false);
        processMannager.cargaRegistros(); // fileMannager lee los registros
        llenarTabla();
        postInit();

        java.util.Date utilDate = new java.util.Date();
        //DateFormat df = new SimpleDateFormat("dd-MM-YYYY");
        DateFormat df = new SimpleDateFormat("YYYY-mm-dd");
        String fecha = df.format(utilDate);
        int año = Integer.parseInt(fecha.substring(0, 4));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        labelMes = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1000, 303));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Mapea Variables");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Seleccionar Otro Archivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Liquidos A Pago");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("Proceso");

        labelMes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelMes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMes.setText("Mes:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registros de Muestra Archivo Cargado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                                    .addComponent(labelMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelMes)
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3))))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        mappingVars.setVisible(true);
        /*  String[] textFieldValues=panel.getTextFieldValue();
           
           for (String valor:textFieldValues){
               System.out.println(valor);
           } */

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser c = new JFileChooser();
        //disableTextField(c);
        c.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int rVal = c.showOpenDialog(MappingTabla.this);

        if (rVal == JFileChooser.APPROVE_OPTION) {
            filename.setText(c.getSelectedFile().getName());

            // disableTextField(c);
            dir.setText(c.getCurrentDirectory().toString());
            System.out.println(filename.getText());
            System.out.println(dir.getText());// TODO add your handling code here:
            filepath = dir.getText() + "\\" + filename.getText();
            System.out.println(filepath);
            processMannager.Archivo = processMannager.llenarLista(filepath);

            processMannager.cargaRegistros(); // fileMannager lee los registros
            llenarTabla();
            postInit();

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        transacciones.llenarTabla();
        transacciones.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void postInit() {
        //Importante mapear la fecha antes
        processMannager.setFecha(fechaForm);

        mappingVars = new MappingVars(cabeceraArchivo);
        mappingVars.button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    mappingVarsButton(evt);
                } catch (IOException ex) {
                    Logger.getLogger(MappingTabla.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MappingTabla.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void mappingVarsButton(java.awt.event.ActionEvent evt) throws IOException, FileNotFoundException, ClassNotFoundException {

        String[] texto = mappingVars.getTextFieldValue();

        for (int i = 0; i < texto.length; i++) {
            System.out.println("casa" + texto[i]);
        }

        if (functions.IsArrayWhite(texto)) {  //si deja todos los espacios en blanco
            JOptionPane.showMessageDialog(null, "Error debe por lo menos ingresar una variable. ",
                    "Error", JOptionPane.ERROR_MESSAGE);

        } else {
            if (!processMannager.IsvalidVariablesMapping(texto, empresaForm)) { //si ingresa variables que no existen
                JOptionPane.showMessageDialog(null, "Error la(s) siguiente(s) variables no existen en el sistema, favor ingresarlas a Softland:  " + processMannager.getVariablesError(texto, empresaForm),
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else {

//carga solo las columnas que estan mapeadas
                processMannager.cargaRegistrosMapping(texto);

                //------------Aca esta la consulta a base de datos para reliquidar
                // processMannager.getVarFicha(mappingVars.getTextFieldValueString());
                //-------------------------------------------------------
                // for(Registro reg: fileMannager.getRegistros()){
                //     System.out.println(reg.getFicha()+" "+reg.getVariable()+" "+reg.getNombreColumna()+" "+reg.getIndexColumna()+" "+reg.getValor());
                // }
                JFileChooser c = new JFileChooser();
                //disableTextField(c);
                c.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                int rVal = c.showOpenDialog(MappingTabla.this);

                if (rVal == JFileChooser.APPROVE_OPTION) {
                    filename.setText(c.getSelectedFile().getName());

                    // disableTextField(c);
                    dir.setText(c.getCurrentDirectory().toString());
                    System.out.println(filename.getText());
                    System.out.println(dir.getText());// TODO add your handling code here:
                    String filepath = dir.getText() + "\\" + filename.getText();
                    System.out.println(filepath);

                    try {

                        if (procesoForm.equals("Liquidaciones")) {
                            processMannager.exportarRegistros(filepath, "registros");
                           processMannager.generaLogLiq(procesoForm, empresaForm, fechaForm, dir.getText(), filename.getText());

                        }
                        if (procesoForm.equals("Reliquidaciones")) {
                            processMannager.getVarFicha(mappingVars.getTextFieldValueString());
                            processMannager.añadeDiffRel();
                            processMannager.exportarRegistros(processMannager.registrosDiferencia, filepath, "registrosDiferencia");
                            processMannager.generaLogRel(procesoForm, empresaForm, fechaForm, dir.getText(), filename.getText());

                        }

                        JOptionPane.showMessageDialog(null, "Archivos generado correctamente.", "Exito", JOptionPane.INFORMATION_MESSAGE);
                    } catch (IOException ex) {
                        Logger.getLogger(MappingTabla.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Error al generar los archivos. " + ex.toString(),
                                "Error", JOptionPane.ERROR_MESSAGE);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(MappingTabla.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Error al generar los archivos. " + ex.toString(),
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }

                }
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MappingTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MappingTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MappingTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MappingTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MappingTabla().setVisible(true);
            }
        });
    }

    public void llenarTabla() {

        cabeceraArchivo = processMannager.getFirstLine();
        System.out.println("la ficha esta en" + Arrays.asList(cabeceraArchivo).indexOf("FICHA"));

        /*  
        for (int i = 0; i < cabeceraArchivo.length; i++) {
            cabeceraArchivo[i]="<html>"+cabeceraArchivo[i]+"<br>date";
        }
         */
        String[] lineas = processMannager.getLineas();
        for (String linea : lineas) {
            System.out.println("linea: " + linea);
        }

        String[] datos = new String[cabeceraArchivo.length];

        this.tableModel = new DefaultTableModel(null, cabeceraArchivo);
        for (int i = 1; i < 7; i++) { //i=1 porque el primero es header // 7 primeras lineas
            datos = lineas[i].split(";");
            this.tableModel.addRow(datos);
        }
        this.jTable1.setModel(tableModel);

    }

    public void cargaDatosMappingTabla() {

        processMannager.Archivo = processMannager.llenarLista(filepath);

        processMannager.cargaRegistros();
        processMannager.setFecha(fechaForm);
        llenarTabla();
        labelTitulo.setText("Proceso " + procesoForm + " Empresa " + functions.getNombreEmpresa(empresaForm));
        labelMes.setText("Mes: " + fechaForm);
        postInit();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelMes;
    private javax.swing.JLabel labelTitulo;
    // End of variables declaration//GEN-END:variables

    public int getAñoForm() {
        return añoForm;
    }

    public void setAñoForm(int añoForm) {
        this.añoForm = añoForm;
    }

    public String getFechaForm() {
        return fechaForm;
    }

    public void setFechaForm(String fechaForm) {
        this.fechaForm = fechaForm;
    }

    public int getEmpresaForm() {
        return empresaForm;
    }

    public void setEmpresaForm(int empresaForm) {
        this.empresaForm = empresaForm;
    }

}
